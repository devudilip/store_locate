   <script>
     var destination = {lat: <%= @stores.first[:lat] %>, lng: <%= @stores.first[:lng] %> };
     function initMap() {
      var mapDiv = document.getElementById('map');
      var directionsService = new google.maps.DirectionsService;
      var directionsDisplay = new google.maps.DirectionsRenderer;
      var myLatLng = {lat: 51.508530, lng: -0.076132};
      var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 8,
        center: myLatLng
      });

      var infoWindow = new google.maps.InfoWindow({map: map});

  // Try HTML5 geolocation.
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var pos = {
        // mocking current location as london only
        lat: 51.508530,//position.coords.latitude,
        lng: -0.076132//position.coords.longitude
      };

      // infoWindow.setPosition(pos);
      // infoWindow.setContent('You are here.');
      map.setCenter(pos);
    }, function() {
      handleLocationError(true, infoWindow, map.getCenter());
    });
  } else {
    // Browser doesn't support Geolocation
    handleLocationError(false, infoWindow, map.getCenter());
  }

  var onChangeHandler = function() {
    var removclassname = document.getElementsByClassName("divlink");
    for(var i=0;i<removclassname.length;i++){
     removclassname[i].className = 'divlink';
   }
   $(this).addClass("spot");
    var lat = parseFloat(this.getElementsByClassName("lat")[0].innerHTML);
    var lng = parseFloat(this.getElementsByClassName("lng")[0].innerHTML);
     // var attribute = this.getElementsByTagName("p")[0].innerHTML;
     var store_destination = {lat: lat, lng: lng};
     var my_source = {lat: 51.508530, lng: -0.076132};
     calculateAndDisplayRoute(directionsService, directionsDisplay, my_source, store_destination);
   };

   var classname = document.getElementsByClassName("divlink");

   for(var i=0;i<classname.length;i++){
    classname[i].addEventListener('click', onChangeHandler, false);
  }


  directionsDisplay.setMap(map);
  calculateAndDisplayRoute(directionsService, directionsDisplay, myLatLng, destination);

//End of init map
}

function calculateAndDisplayRoute(directionsService, directionsDisplay, myLatLng, storeLatLng) {
  directionsService.route({
    origin: myLatLng,//document.getElementById('start').value,
    destination: storeLatLng,//document.getElementById('end').value,
    travelMode: google.maps.TravelMode.DRIVING
  }, function(response, status) {
    if (status === google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
    } else {
      window.alert('Directions request failed due to ' + status);
    }
  });
}

function rad(x) {return x*Math.PI/180;}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAzcrBjvqWxsxl7e_Tzqhf7k-zZTQhEibE&callback=initMap"
async defer></script>
